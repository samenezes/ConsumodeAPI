
import React, { useState, useEffect } from 'react';
import { View, Text, FlatList, ActivityIndicator } from 'react-native';

const App = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);

  // Função para consumir a API
  const fetchData = async () => {
    try {
      const response = await fetch('https://jsonplaceholder.typicode.com/users');
      const json = await response.json();
      setData(json);
    } catch (error) {
      console.error('Erro ao carregar dados:', error);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchData(); // Chama a função ao carregar o componente
  }, []);

  if (loading) {
    return <ActivityIndicator size="large" color="#0000ff" />;
  }

  return (
    <View>
      <FlatList
        data={data}
        keyExtractor={(item) => item.id.toString()}
        renderItem={({ item }) => (
          <View>
            <Text>{item.name}</Text>
            <Text>{item.email}</Text>
          </View>
        )}
      />
    </View>
  );
};

export default App;
Explicando o código:
useState e useEffect: useState é utilizado para armazenar os dados da API e o estado de carregamento. useEffect chama a função fetchData assim que o componente for montado.
fetchData: A função fetchData utiliza o método fetch() para realizar uma requisição GET à API e obter os dados. A resposta é convertida para JSON e armazenada no estado data.
FlatList: Utiliza-se o FlatList para renderizar uma lista de itens dinamicamente. Esse é um componente altamente otimizado para listas em React Native.
